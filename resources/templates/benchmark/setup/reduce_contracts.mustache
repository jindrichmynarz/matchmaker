{{!
@param IRI   source-graph
@param IRI   sample-graph
@param IRI   zindex-graph
@param IRI   withheld-graph
@param int   min-main-object-count
@param int   min-additional-object-count
@param float min-zindex
@param int   limit
@param int   offset
}}

{{> templates/prefixes.mustache}}

DELETE {
  GRAPH <{{source-graph}}> {
    ?contract pc:awardedTender ?awardedTender .
  }
}
INSERT {
  GRAPH <{{withheld-graph}}> {
    ?contract pc:awardedTender ?awardedTender .
  }
}
WHERE {
  {
    SELECT ?contract ?awardedTender
    WHERE {
      {
        SELECT ?contract ?awardedTender 
        WHERE {
          GRAPH <{{source-graph}}> {
            ?contract a pc:Contract ;
              pc:awardedTender ?awardedTender .
            FILTER NOT EXISTS {
              [] pc:lot ?contract .
            }
            OPTIONAL {
              ?contract pc:mainObject ?mainObject .
            }
            OPTIONAL {
              ?contract pc:additionalObject ?additionalObject .
            }
            {{#min-zindex}}
            ?contract pc:contractingAuthority ?contractingAuthority .
            {{/min-zindex}}
          }
          {{#min-zindex}}
          GRAPH <{{source-graph}}> {
            ?contractingAuthority adms:identifier/skos:notation ?identifier .
          }
          GRAPH <{{zindex-graph}}> {
            [] pccz:zindex ?zindex ;
              rov:registration/skos:notation ?identifier .
            FILTER (?zindex >= {{min-zindex}})
          }
          {{/min-zindex}}
        }
        GROUP BY ?contract ?awardedTender
        HAVING (
                (COUNT(DISTINCT ?mainObject) >= {{min-main-object-count}})
                &&
                (COUNT(DISTINCT ?additionalObject) >= {{min-additional-object-count}})
              )
        ORDER BY ASC(?contract)
      }
    }
    OFFSET {{offset}}
    LIMIT {{limit}}
  }
}
